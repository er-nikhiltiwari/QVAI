# -*- coding: utf-8 -*-
"""Text(Paragraph)_Summarization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19HI169BoC_uL6VmpFq1RiEnsNfis8eVl
"""

pip install nltk

import nltk
from nltk.corpus import stopwords
from nltk.tokenize import sent_tokenize, word_tokenize
from nltk.probability import FreqDist
import string

nltk.download('punkt', quiet=True)
nltk.download('stopwords', quiet=True)

def summarize_paragraph(paragraph, num_sentences=3):
    sentences = sent_tokenize(paragraph)
    words = word_tokenize(paragraph.lower())

    stop_words = set(stopwords.words('english') + list(string.punctuation))
    filtered_words = [word for word in words if word not in stop_words]

    word_frequencies = FreqDist(filtered_words)

    sentence_scores = {}
    for i, sentence in enumerate(sentences):
        for word in word_tokenize(sentence.lower()):
            if word in word_frequencies:
                if i in sentence_scores:
                    sentence_scores[i] += word_frequencies[word]
                else:
                    sentence_scores[i] = word_frequencies[word]

    if not sentence_scores:
        return "Unable to generate summary. Input may be too short."

    top_sentence_indices = sorted(sentence_scores,
                                 key=sentence_scores.get,
                                 reverse=True)[:num_sentences]

    summary_sentences = [sentences[i] for i in sorted(top_sentence_indices)]

    return ' '.join(summary_sentences)

def main():
    print("Paragraph Summarizer")
    print("====================")

    paragraph = input("Enter the Paragraph for Summarization:\n")
    num_sentences = int(input("\nNumber of sentences for the Summary of Paragraph: ") or 3)

    if paragraph.strip():
        summary = summarize_paragraph(paragraph, num_sentences)
        print("\nSUMMARY --> :")
        print("========")
        print(summary)
    else:
        print("Error: No input provided.")

if __name__ == "__main__":
    main()